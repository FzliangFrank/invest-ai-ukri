geom_line() +
geom_point() +
theme(legend.position = "none", axis.text.y.right = element_text(size = 20)) +
# scale_y_reverse() +
gghighlight(word %in% fav_words,
unhighlighted_params=list(alpha=0.2),
line_label_type = "text_path"#"sec_axis"
) +
scale_color_brewer(palette="Set2") +
theme_minimal()
}
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "number"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
## track progression of top n over years
plt_style_change = function(text_by_year,
fav_words=c("artificial-intelligence","ai","health", "machine-learning","learning"),
limit_rank = 10,
weight = c("number", "pcg")
) {
if(weight[1] == "number") {
weightQ = quo(n_prj)
} else if (weight[1] == "pcg") {
weightQ = quo(pcg_prj)
}
word_ranked = text_by_year |>
# filter(year > 2010) |>
rank_words(year) |>
group_by(year) |>
mutate(pcg_prj = n_prj/nrow(analysis_prj)) |>
ungroup()
top_n = word_ranked |>
filter(rank <= limit_rank) |>
## join back words that were crop out in top n ranking
select(-n_prj, -rank,-pcg_prj)
top_n_complete =
tidyr::expand(top_n, year, word) |>
left_join(word_ranked, c("year","word")) |>
mutate(across(c(n_prj, pcg_prj), ~coalesce(.x,0))) |>
mutate(rank = coalesce(rank, max(word_ranked$rank + 1)))
top_n_complete |>
filter(year >= 2010 & year <= 2023) |>
ggplot(aes(x=year,y= !! weightQ,color=word)) +
geom_line() +
geom_point() +
theme(legend.position = "none", axis.text.y.right = element_text(size = 20)) +
# scale_y_reverse() +
gghighlight(word %in% fav_words,
unhighlighted_params=list(alpha=0.2),
line_label_type = "text_path"#"sec_axis"
) +
scale_color_brewer(palette="Set2") +
theme_minimal()
}
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "number"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight="pcg"
) +
ylab("absolute number of project")
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight="pcg"
)
## track progression of top n over years
plt_style_change = function(text_by_year,
fav_words=c("artificial-intelligence","ai","health", "machine-learning","learning"),
limit_rank = 10,
weight = c("number", "pcg")
) {
if(weight[1] == "number") {
weightQ = quo(n_prj)
} else if (weight[1] == "pcg") {
weightQ = quo(pcg_prj)
} else {
stop()
}
word_ranked = text_by_year |>
# filter(year > 2010) |>
rank_words(year) |>
group_by(year) |>
mutate(pcg_prj = n_prj/nrow(analysis_prj)) |>
ungroup()
top_n = word_ranked |>
filter(rank <= limit_rank) |>
## join back words that were crop out in top n ranking
select(-n_prj, -rank,-pcg_prj)
top_n_complete =
tidyr::expand(top_n, year, word) |>
left_join(word_ranked, c("year","word")) |>
mutate(across(c(n_prj, pcg_prj), ~coalesce(.x,0))) |>
mutate(rank = coalesce(rank, max(word_ranked$rank + 1)))
top_n_complete |>
filter(year >= 2010 & year <= 2023) |>
ggplot(aes(x=year,y= !! weightQ, color=word)) +
geom_line() +
geom_point() +
theme(legend.position = "none", axis.text.y.right = element_text(size = 20)) +
# scale_y_reverse() +
gghighlight(word %in% fav_words,
unhighlighted_params=list(alpha=0.2),
line_label_type = "text_path"#"sec_axis"
) +
scale_color_brewer(palette="Set2") +
theme_minimal()
}
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "number"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
## track progression of top n over years
plt_style_change = function(text_by_year,
fav_words=c("artificial-intelligence","ai","health", "machine-learning","learning"),
limit_rank = 10,
weight = c("number", "pcg")
) {
if(weight[1] == "number") {
print("number")
weightQ = quo(n_prj)
} else if (weight[1] == "pcg") {
weightQ = quo(pcg_prj)
} else {
stop()
}
word_ranked = text_by_year |>
# filter(year > 2010) |>
rank_words(year) |>
group_by(year) |>
mutate(pcg_prj = n_prj/nrow(analysis_prj)) |>
ungroup()
top_n = word_ranked |>
filter(rank <= limit_rank) |>
## join back words that were crop out in top n ranking
select(-n_prj, -rank,-pcg_prj)
top_n_complete =
tidyr::expand(top_n, year, word) |>
left_join(word_ranked, c("year","word")) |>
mutate(across(c(n_prj, pcg_prj), ~coalesce(.x,0))) |>
mutate(rank = coalesce(rank, max(word_ranked$rank + 1)))
top_n_complete |>
filter(year >= 2010 & year <= 2023) |>
ggplot(aes(x=year,y= !! weightQ, color=word)) +
geom_line() +
geom_point() +
theme(legend.position = "none", axis.text.y.right = element_text(size = 20)) +
# scale_y_reverse() +
gghighlight(word %in% fav_words,
unhighlighted_params=list(alpha=0.2),
line_label_type = "text_path"#"sec_axis"
) +
scale_color_brewer(palette="Set2") +
theme_minimal()
}
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "number"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
## track progression of top n over years
plt_style_change = function(text_by_year,
fav_words=c("artificial-intelligence","ai","health", "machine-learning","learning"),
limit_rank = 10,
weight = c("number", "pcg")
) {
if(weight[1] == "number") {
print("number")
weightQ = quo(n_prj)
} else if (weight[1] == "pcg") {
weightQ = quo(pcg_prj)
} else {
stop()
}
word_ranked = text_by_year |>
# filter(year > 2010) |>
rank_words(year) |>
group_by(year) |>
mutate(pcg_prj = n_prj/sum(n_prj)) |>
ungroup()
top_n = word_ranked |>
filter(rank <= limit_rank) |>
## join back words that were crop out in top n ranking
select(-n_prj, -rank,-pcg_prj)
top_n_complete =
tidyr::expand(top_n, year, word) |>
left_join(word_ranked, c("year","word")) |>
mutate(across(c(n_prj, pcg_prj), ~coalesce(.x,0))) |>
mutate(rank = coalesce(rank, max(word_ranked$rank + 1)))
top_n_complete |>
filter(year >= 2010 & year <= 2023) |>
ggplot(aes(x=year,y= !! weightQ, color=word)) +
geom_line() +
geom_point() +
theme(legend.position = "none", axis.text.y.right = element_text(size = 20)) +
# scale_y_reverse() +
gghighlight(word %in% fav_words,
unhighlighted_params=list(alpha=0.2),
line_label_type = "text_path"#"sec_axis"
) +
scale_color_brewer(palette="Set2") +
theme_minimal()
}
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "number"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "number"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight="pcg"
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
weight = 'absolute',
limit_rank = 30
)
View(title_word_by_year)
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = 'absolute'
)
View(abstrc_word_by_year)
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30
)
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = "absolute"
)
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = "pcg"
)
## track progression of top n over years
plt_style_change = function(text_by_year,
fav_words=c("artificial-intelligence","ai","health", "machine-learning","learning"),
limit_rank = 10,
weight = c("pcg", "absolute")
) {
if(weight[1] == "absolute") {
weightQ = quo(n_prj)
} else if (weight[1] == "pcg") {
weightQ = quo(pcg_prj)
} else {
stop()
}
word_ranked = text_by_year |>
# filter(year > 2010) |>
rank_words(year) |>
group_by(year) |>
mutate(pcg_prj = n_prj/sum(n_prj)) |>
ungroup()
top_n = word_ranked |>
filter(rank <= limit_rank) |>
## join back words that were crop out in top n ranking
select(-n_prj, -rank,-pcg_prj)
top_n_complete =
tidyr::expand(top_n, year, word) |>
left_join(word_ranked, c("year","word")) |>
mutate(across(c(n_prj, pcg_prj), ~coalesce(.x,0))) |>
mutate(rank = coalesce(rank, max(word_ranked$rank + 1)))
top_n_complete |>
filter(year >= 2010 & year <= 2023) |>
ggplot(aes(x=year,y= !! weightQ, color=word)) +
geom_line() +
geom_point() +
theme(legend.position = "none", axis.text.y.right = element_text(size = 20)) +
# scale_y_reverse() +
gghighlight(word %in% fav_words,
unhighlighted_params=list(alpha=0.2),
line_label_type = "text_path"#"sec_axis"
) +
scale_color_brewer(palette="Set2") +
theme_minimal()
}
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = "absolute"
)
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight="pcg"
) +
ylab("absolute number of project")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "absolute"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "pcg"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight="absolute"
) +
ylab("absolute number of project")
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = "pcg"
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight="absolute"
)
title_word_by_year |>
filter(year >= 2016) |>
mutate(year = as.character(year)) |>
plot_top_n(15, year) +
theme_minimal()
abstrc_word_by_year |>
filter(year >= 2016) |>
mutate(year = as.character(year)) |>
plot_top_n(15, year) +
theme_minimal()
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight = "pcg"
) +
ylab("propotion of project") +
ggtitle("Keywords mention in project title",
stringr::str_wrap(glue::glue("The mention of 'health' seen a sharp raise in 2020. ",
"Researchers are more comformatble using term 'ai' rather than 'aritificial-intelligence'"),80)
)
#| warning: false
INTERESTING_WORDS = c("artificial-intelligence","ai","health")
title_word_by_year |>
plt_style_change(
INTERESTING_WORDS,
weight="absolute"
) +
ylab("absolute number of project")
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = "pcg"
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight="absolute"
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight="absolute"
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight = "pcg"
)
#| warning: false
INTERESTING_WORDS=c("ai","artificial-intelligence","covid","health","artificial")
abstrc_word_by_year |>
plt_style_change(
fav_words=INTERESTING_WORDS,
limit_rank = 30,
weight="absolute"
)
